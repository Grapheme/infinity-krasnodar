## Конфигурационный файл Sphinx-а для индексации Живой улицы

#######################
#
# Описываем индексы
#
#######################

# Источник-родитель для всех остальных источников. Здесь указываются параметры доступа 
# к базе данных сайта

source src_default
{
	type			= mysql
	sql_host		= localhost
	sql_user		= root
	sql_pass		= perl03
	sql_port		= 3306	# optional, default is 3306

    # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы 
	# операции с БД происходили не через TCP/IP стек сервера)
    sql_sock	= /run/mysqld/mysqld.sock

	mysql_connect_flags	= 32 # 32- включение сжатие при обмене данными с БД

	sql_query_pre = SET NAMES utf8
    sql_query_pre = SET CHARACTER SET utf8
}


source lessad
{
	type		= mysql
	sql_host	= localhost
	sql_user	= root
	sql_pass	= perl03
	sql_db		= lessad
	sql_port	= 3306
    # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы 
	# операции с БД происходили не через TCP/IP стек сервера)
    sql_sock	= /run/mysqld/mysqld.sock
    
    	
	mysql_connect_flags	= 32 # 32- включение сжатие при обмене данными с БД
    
	# Включам нужную кодировку соединения и выключаем кеш запросов
	sql_query_pre			= SET NAMES utf8
    sql_query_pre			= SET SESSION query_cache_type=OFF    
}

# Источник информационные блокы - каналы
source channelsSource : lessad
{
	# запрос на получения всех записей информационных блокоы
	sql_query		= \
		SELECT `channels`.`id`, `channels`.`template`, `channels`.`title`, `channels`.`link`, `channels`.`short`, `channels`.`desc`, `channel_category`.`id` as category_id, `channel_category`.`title` as category_title \
		FROM `channels` INNER JOIN `channel_category` ON `channels`.`category_id` = `channel_category`.`id` ORDER BY `channel_category`.`title`, `channels`.`title`

	sql_ranged_throttle	= 0
}

# Источник продукция
source productsSource : lessad
{
	sql_query		= \
		SELECT products.id, products.title, products.short, products.desc, products_category.id as category_id, products_category.title as category_title \
		FROM products INNER JOIN products_category ON products.category_id = products_category.id ORDER BY products_category.title, products.title

}

# Источник отзывы
source reviewsSource : lessad
{
	sql_query		= \
		SELECT reviews.id, reviews_meta.name, reviews_meta.preview, reviews_meta.content \
        FROM reviews INNER JOIN reviews_meta ON reviews.id = reviews_meta.review_id \
        ORDER BY reviews.published_at
}

# Источник страницы
source pagesSource : lessad
{
	sql_query		= \
		SELECT i18n_pages.id, i18n_pages.slug, i18n_pages.template, i18n_pages_meta.name, i18n_pages_meta.content, i18n_pages_meta.seo_title, i18n_pages_meta.seo_description, i18n_pages_meta.seo_h1 \
        FROM i18n_pages INNER JOIN i18n_pages_meta ON i18n_pages.id = i18n_pages_meta.page_id
}

#######################
#
# Описываем индексы
#
#######################

index channelsIndex
{
	# Источник, который будет хранить данный индекса
	source			= channelsSource
	path			= /var/lib/sphinxsearch/data/lessad_channels_list

	# Тип хранения аттрибутов
	#docinfo			= extern

	mlock			= 0

	# Используемые морфологические движки
	morphology		= stem_en, stem_ru

	# Кодировака данных из источника	
	charset_type	= utf-8


	# Из данных источника HTML-код нужно вырезать
	html_strip		= 1
}

index productsIndex
{
	source			= productsSource
	path			= /var/lib/sphinxsearch/data/lessad_products_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index reviewsIndex
{
	source			= reviewsSource
	path			= /var/lib/sphinxsearch/data/lessad_reviews_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index pagesIndex
{
	source			= pagesSource
	path			= /var/lib/sphinxsearch/data/lessad_pages_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

##############################################################################################
## INFINITI ROSTOV
##############################################################################################


source infinity
{
	type		= mysql
	sql_host	= localhost
	sql_user	= root
	sql_pass	= perl03
	sql_db		= infinity
	sql_port	= 3306
    # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы
	# операции с БД происходили не через TCP/IP стек сервера)
    sql_sock	= /run/mysqld/mysqld.sock


	mysql_connect_flags	= 32 # 32- включение сжатие при обмене данными с БД

	# Включам нужную кодировку соединения и выключаем кеш запросов
	sql_query_pre			= SET NAMES utf8
    sql_query_pre			= SET SESSION query_cache_type=OFF
}

# Источник информационные блокы - каналы (Спецпредложения)
source channelsSourceInfinity : infinity
{
	# запрос на получения всех записей информационных блокоы
	sql_query		= \
		SELECT `channels`.`id`, `channels`.`template`, `channels`.`title`, `channels`.`link`, `channels`.`short`, `channels`.`desc`, `channel_category`.`id` as category_id, `channel_category`.`title` as category_title \
		FROM `channels` INNER JOIN `channel_category` ON `channels`.`category_id` = `channel_category`.`id` WHERE `channel_category`.`slug` = 'offer' ORDER BY `channel_category`.`title`, `channels`.`title`

	sql_ranged_throttle	= 0
}

# Источник продукции
source productsSourceInfinity : infinity
{
	sql_query		= \
		SELECT products.id, products_meta.title, products_meta.preview, products_meta.content, products_meta.specifications, products_meta.seo_url, products_category.id as category_id, products_category.title as category_title \
		FROM products INNER JOIN products_meta ON products.id = products_meta.product_id \
            INNER JOIN products_category ON products.category_id = products_category.id  \
        ORDER BY products_category.title, products_meta.title

}

# Источник продукция - Аксессуары
source productsAccessibilitySourceInfinity : infinity
{
	sql_query		= \
		SELECT products_accessories.id, products_accessories.product_id, products_meta.seo_url, products_accessories.title, products_accessories.description \
		FROM products_accessories INNER JOIN products_meta ON products_accessories.product_id = products_meta.product_id \
        ORDER BY products_accessories.title

}

# Источник новости
source newsSourceInfinity : infinity
{
	sql_query		= \
	    SELECT i18n_news.id, i18n_news_meta.title, i18n_news_meta.preview, i18n_news_meta.content \
        FROM i18n_news INNER JOIN i18n_news_meta ON i18n_news.id = i18n_news_meta.news_id \
        ORDER BY i18n_news.published_at
}

# Источник страницы
source pagesSourceInfinity : infinity
{
	sql_query		= \
		SELECT i18n_pages.id, i18n_pages.slug, i18n_pages.template, i18n_pages_meta.name, i18n_pages_meta.content, i18n_pages_meta.seo_title, i18n_pages_meta.seo_description, i18n_pages_meta.seo_h1 \
        FROM i18n_pages INNER JOIN i18n_pages_meta ON i18n_pages.id = i18n_pages_meta.page_id
}

#######################
#
# Описываем индексы
#
#######################

index channelsIndexInfinity
{
	# Источник, который будет хранить данный индекса
	source			= channelsSourceInfinity
	path			= /var/lib/sphinxsearch/data/infinity_channels_list

	# Тип хранения аттрибутов
	#docinfo			= extern

	mlock			= 0

	# Используемые морфологические движки
	morphology		= stem_en, stem_ru

	# Кодировака данных из источника
	charset_type	= utf-8


	# Из данных источника HTML-код нужно вырезать
	html_strip		= 1
}

index productsIndexInfinity
{
	source			= productsSourceInfinity
	path			= /var/lib/sphinxsearch/data/infinity_products_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index productsAccessibilityIndexInfinity
{
	source			= productsAccessibilitySourceInfinity
	path			= /var/lib/sphinxsearch/data/infinity_products_accessibility_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index newsIndexInfinity
{
	source			= newsSourceInfinity
	path			= /var/lib/sphinxsearch/data/infinity_news_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index pagesIndexInfinity
{
	source			= pagesSourceInfinity
	path			= /var/lib/sphinxsearch/data/infinity_pages_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

##############################################################################################
## INFINITI KRASNODAR
##############################################################################################

source infinity_krasnodar
{
	type		= mysql
	sql_host	= localhost
	sql_user	= root
	sql_pass	= perl03
	sql_db		= infinity-krasnodar
	sql_port	= 3306
    # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы
	# операции с БД происходили не через TCP/IP стек сервера)
    sql_sock	= /run/mysqld/mysqld.sock


	mysql_connect_flags	= 32 # 32- включение сжатие при обмене данными с БД

	# Включам нужную кодировку соединения и выключаем кеш запросов
	sql_query_pre			= SET NAMES utf8
    sql_query_pre			= SET SESSION query_cache_type=OFF
}

# Источник информационные блокы - каналы (Спецпредложения)
source channelsSourceInfinityKrasnodar : infinity_krasnodar
{
	# запрос на получения всех записей информационных блокоы
	sql_query		= \
		SELECT `channels`.`id`, `channels`.`template`, `channels`.`title`, `channels`.`link`, `channels`.`short`, `channels`.`desc`, `channel_category`.`id` as category_id, `channel_category`.`title` as category_title \
		FROM `channels` INNER JOIN `channel_category` ON `channels`.`category_id` = `channel_category`.`id` WHERE `channel_category`.`slug` = 'offer' ORDER BY `channel_category`.`title`, `channels`.`title`

	sql_ranged_throttle	= 0
}

# Источник продукции
source productsSourceInfinityKrasnodar : infinity_krasnodar
{
	sql_query		= \
		SELECT products.id, products_meta.title, products_meta.preview, products_meta.content, products_meta.specifications, products_meta.seo_url, products_category.id as category_id, products_category.title as category_title \
		FROM products INNER JOIN products_meta ON products.id = products_meta.product_id \
            INNER JOIN products_category ON products.category_id = products_category.id  \
        ORDER BY products_category.title, products_meta.title

}

# Источник продукция - Аксессуары
source productsAccessibilitySourceInfinityKrasnodar : infinity_krasnodar
{
	sql_query		= \
		SELECT products_accessories.id, products_accessories.product_id, products_meta.seo_url, products_accessories.title, products_accessories.description \
		FROM products_accessories INNER JOIN products_meta ON products_accessories.product_id = products_meta.product_id \
        ORDER BY products_accessories.title

}

# Источник новости
source newsSourceInfinityKrasnodar : infinity_krasnodar
{
	sql_query		= \
	    SELECT i18n_news.id, i18n_news_meta.title, i18n_news_meta.preview, i18n_news_meta.content \
        FROM i18n_news INNER JOIN i18n_news_meta ON i18n_news.id = i18n_news_meta.news_id \
        ORDER BY i18n_news.published_at
}

# Источник страницы
source pagesSourceInfinityKrasnodar : infinity_krasnodar
{
	sql_query		= \
		SELECT i18n_pages.id, i18n_pages.slug, i18n_pages.template, i18n_pages_meta.name, i18n_pages_meta.content, i18n_pages_meta.seo_title, i18n_pages_meta.seo_description, i18n_pages_meta.seo_h1 \
        FROM i18n_pages INNER JOIN i18n_pages_meta ON i18n_pages.id = i18n_pages_meta.page_id
}

#######################
#
# Описываем индексы
#
#######################Krasnodar

index channelsIndexInfinityKrasnodar
{
	# Источник, который будет хранить данный индекса
	source			= channelsSourceInfinityKrasnodar
	path			= /var/lib/sphinxsearch/data/infinity_krasnodar_channels_list

	# Тип хранения аттрибутов
	#docinfo			= extern

	mlock			= 0

	# Используемые морфологические движки
	morphology		= stem_en, stem_ru

	# Кодировака данных из источника
	charset_type	= utf-8


	# Из данных источника HTML-код нужно вырезать
	html_strip		= 1
}

index productsIndexInfinityKrasnodar
{
	source			= productsSourceInfinityKrasnodar
	path			= /var/lib/sphinxsearch/data/infinity_krasnodar_products_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index productsAccessibilityIndexInfinityKrasnodar
{
	source			= productsAccessibilitySourceInfinityKrasnodar
	path			= /var/lib/sphinxsearch/data/infinity_products_krasnodar_accessibility_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index newsIndexInfinityKrasnodar
{
	source			= newsSourceInfinityKrasnodar
	path			= /var/lib/sphinxsearch/data/infinity_krasnodar_news_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

index pagesIndexInfinityKrasnodar
{
	source			= pagesSourceInfinityKrasnodar
	path			= /var/lib/sphinxsearch/data/infinity_krasnodar_pages_list

	#docinfo			= extern

	mlock			= 0

	morphology		= stem_en, stem_ru

	charset_type	= utf-8

	html_strip		= 1
}

##############################################################################################
## NETRIKA
##############################################################################################

source netrika_solutions : src_default
{
	sql_db			= netrika

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
    sql_query     = \
        SELECT dicval.id AS id, 2 AS dic_id, 'Решения' AS dic_name, 'solutions' AS dic_slug, dicval.name AS name, tbl1.value AS describes_purpose_decision, tbl2.value AS performance_indicators, tbl3.value AS description_target_audience, tbl4.value AS assignment_solution, tbl5.value AS description_advantages_solution, tbl6.value AS application_solution, tbl7.value AS description_integration, tbl8.value AS identify_features_solution, tbl9.value AS additional_features FROM dictionary_values AS dicval \
        LEFT JOIN dictionary_fields_values AS tbl1 ON tbl1.dicval_id = dicval.id AND tbl1.key = 'describes_purpose_decision' AND tbl1.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl2 ON tbl2.dicval_id = dicval.id AND tbl2.key = 'performance_indicators' AND tbl2.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl3 ON tbl3.dicval_id = dicval.id AND tbl3.key = 'description_target_audience' AND tbl3.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl4 ON tbl4.dicval_id = dicval.id AND tbl4.key = 'assignment_solution' AND tbl4.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl5 ON tbl5.dicval_id = dicval.id AND tbl5.key = 'description_advantages_solution' AND tbl5.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl6 ON tbl6.dicval_id = dicval.id AND tbl6.key = 'application_solution' AND tbl6.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl7 ON tbl7.dicval_id = dicval.id AND tbl7.key = 'description_integration' AND tbl7.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl8 ON tbl8.dicval_id = dicval.id AND tbl8.key = 'identify_features_solution' AND tbl8.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl9 ON tbl9.dicval_id = dicval.id AND tbl9.key = 'additional_features' AND tbl9.language IS NULL \
        WHERE dicval.version_of IS NULL AND dicval.dic_id = '2'

    sql_attr_uint = id

}

index netrika_solutions_index
{
	source			= netrika_solutions
	path			= /var/lib/sphinxsearch/data/netrika_solutions_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


source netrika_projects : src_default
{
	sql_db			= netrika

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
    sql_query     = \
        SELECT dicval.id AS id, 3 AS dic_id, 'Проекты' AS dic_name, 'projects' AS dic_slug, dicval.name AS name, tbl1.value AS link_to_project, tbl2.value AS description_objectives, tbl3.value AS description_tasks, tbl4.value AS description_results, tbl5.value AS description_results_num, tbl6.value AS description_advantages, tbl7.value AS description_features, tbl8.value AS description_process FROM dictionary_values AS dicval \
        LEFT JOIN dictionary_fields_values AS tbl1 ON tbl1.dicval_id = dicval.id AND tbl1.key = 'link_to_project' AND tbl1.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl2 ON tbl2.dicval_id = dicval.id AND tbl2.key = 'description_objectives' AND tbl2.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl3 ON tbl3.dicval_id = dicval.id AND tbl3.key = 'description_tasks' AND tbl3.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl4 ON tbl4.dicval_id = dicval.id AND tbl4.key = 'description_results' AND tbl4.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl5 ON tbl5.dicval_id = dicval.id AND tbl5.key = 'description_results_num' AND tbl5.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl6 ON tbl6.dicval_id = dicval.id AND tbl6.key = 'description_advantages' AND tbl6.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl7 ON tbl7.dicval_id = dicval.id AND tbl7.key = 'description_features' AND tbl7.language IS NULL \
        LEFT JOIN dictionary_fields_values AS tbl8 ON tbl8.dicval_id = dicval.id AND tbl8.key = 'description_process' AND tbl8.language IS NULL \
        WHERE dicval.version_of IS NULL AND dicval.dic_id = '3'

    sql_attr_uint = id

}

index netrika_projects_index
{
	source			= netrika_projects
	path			= /var/lib/sphinxsearch/data/netrika_projects_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


source netrika_news : src_default
{
	sql_db			= netrika

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
    sql_query     = \
        SELECT dicval.id AS id, 13 AS dic_id, 'Новости' AS dic_name, 'newslist' AS dic_slug, dicval.name AS name, tbl1.value AS preview, tbl2.value AS content FROM dictionary_values AS dicval \
        LEFT JOIN dictionary_fields_values AS tbl1 ON tbl1.dicval_id = dicval.id AND tbl1.key = 'preview' AND tbl1.language IS NOT NULL \
        LEFT JOIN dictionary_fields_values AS tbl2 ON tbl2.dicval_id = dicval.id AND tbl2.key = 'content' AND tbl2.language IS NOT NULL \
        WHERE dicval.version_of IS NULL AND dicval.dic_id = '13'

    sql_attr_uint = id

}

index netrika_news_index
{
	source			= netrika_news
	path			= /var/lib/sphinxsearch/data/netrika_news_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


source netrika_pages : src_default
{
	sql_db			= netrika

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	sql_query		= \
		SELECT p.id, pb.id AS block_id, pbm.content AS block_content \
		FROM pages p \
        LEFT JOIN pages_blocks pb ON pb.page_id = p.id \
        LEFT JOIN pages_blocks_meta pbm ON pbm.block_id = pb.id \
        WHERE p.version_of IS NULL

	sql_attr_uint		= id
}

index netrika_pages_index
{
	source			= netrika_pages
	path			= /var/lib/sphinxsearch/data/netrika_pages_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


################################################################################


source plitka_articles : src_default
{
	sql_db			= plitka

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
    sql_query     = \
        SELECT dicval.id AS id, 13 AS dic_id, 'Статьи' AS dic_name, 'articles' AS dic_slug, dicval.name AS name, tbl1.value AS content FROM dictionary_values AS dicval \
        LEFT JOIN dictionary_textfields_values AS tbl1 ON tbl1.dicval_id = dicval.id AND tbl1.key = 'content' AND tbl1.language IS NULL \
        WHERE dicval.version_of IS NULL AND dicval.dic_id = '13'

    sql_attr_uint = id
}

index plitka_articles_index
{
	source			= plitka_articles
	path			= /var/lib/sphinxsearch/data/plitka_articles_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


source plitka_collections : src_default
{
	sql_db			= plitka

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
    sql_query     = \
        SELECT dicval.id AS id, 9 AS dic_id, 'Коллекции' AS dic_name, 'collections' AS dic_slug, dicval.name AS name, tbl1.value AS description FROM dictionary_values AS dicval \
        LEFT JOIN dictionary_textfields_values AS tbl1 ON tbl1.dicval_id = dicval.id AND tbl1.key = 'description' AND tbl1.language IS NULL \
        WHERE dicval.version_of IS NULL AND dicval.dic_id = '9'

    sql_attr_uint = id
}

index plitka_collections_index
{
	source			= plitka_collections
	path			= /var/lib/sphinxsearch/data/plitka_collections_index
	docinfo			= extern
	mlock			= 0
	morphology		= stem_en, stem_ru
	min_word_len	= 1
	charset_type	= utf-8
}


##############################################################################################



#######################
#
# Настройки индексатора
#
#######################


indexer
{
	# Лимит памяти, который может использавать демон-индексатор
	mem_limit		= 32M
}

#######################
#
# Настройка демона-поисковика
#
#######################

searchd
{
    # Адрес, на котором будет прослушиваться порт
    listen			= 127.0.0.1:3312

	# Лог-файл демона
	log				= /var/log/sphinxsearch/searchd.log

	# Лог поисковых запросов. Если закомментировать,то логировать поисковые строки не будет
	query_log		= /var/log/sphinxsearch/query.log

	# Время в секундах, которое ждет демон при обмене данными с клиентом. По исчерпании происходит разрыв коннекта
	read_timeout	= 5

	# Максимальное количество одновременно-обрабатываемых запросов. 0 означает дофига, а точнее без ограничения
	max_children	= 30

	# Файл, в который сохраняется PID-процесса при запуске
	pid_file		= /var/run/sphinxsearch/searchd.pid
}